"use client";

import { Button } from "@/components/ui/button";
import {
  AnimatePresence,
  motion,
  useScroll,
  useTransform,
} from "framer-motion";
import {
  ArrowRight,
  Brain,
  Camera,
  ChevronLeft,
  ChevronRight,
  MessageSquare,
  School,
  Trophy,
  Zap,
} from "lucide-react";
import Link from "next/link";
import React, { useEffect, useRef, useState } from "react";

const TypingEffect = ({ words }) => {
  const [currentWord, setCurrentWord] = useState(0);
  const [currentText, setCurrentText] = useState("");
  const [isDeleting, setIsDeleting] = useState(false);

  useEffect(() => {
    const typingInterval = setInterval(() => {
      if (isDeleting) {
        setCurrentText((prev) => prev.slice(0, -1));
        if (currentText === "") {
          setIsDeleting(false);
          setCurrentWord((prev) => (prev + 1) % words.length);
        }
      } else {
        setCurrentText((prev) => words[currentWord].slice(0, prev.length + 1));
        if (currentText === words[currentWord]) {
          setIsDeleting(true);
        }
      }
    }, 50);

    return () => clearInterval(typingInterval);
  }, [currentText, isDeleting, currentWord, words]);

  return (
    <motion.span
      key={currentText}
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
      className="text-blue-600 font-bold"
    >
      {currentText}
    </motion.span>
  );
};

const features = [
  {
    title: "–†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á –ø–æ —Ñ–æ—Ç–æ",
    description:
      "–°—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π—Ç–µ –∑–∞–¥–∞—á—É –∏ –ø–æ–ª—É—á–∏—Ç–µ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏—è–º–∏",
    icon: Camera,
    content: (
      <div className="relative w-full max-w-md h-80 bg-white rounded-lg shadow-xl overflow-hidden">
        <motion.div
          initial={{ scale: 0.8, opacity: 0 }}
          animate={{ scale: 1, opacity: 1 }}
          transition={{ duration: 0.8, ease: "easeOut" }}
          className="absolute top-4 left-4 right-4 h-40 bg-gray-200 rounded-lg flex items-center justify-center"
        >
          <Camera size={64} className="text-gray-400" />
        </motion.div>
        <motion.div
          initial={{ y: "100%" }}
          animate={{ y: 0 }}
          transition={{ delay: 0.5, duration: 0.8, ease: "easeOut" }}
          className="absolute bottom-0 left-0 right-0 bg-blue-600 text-white p-4 h-48"
        >
          <h4 className="text-lg font-bold mb-2">–†–µ—à–µ–Ω–∏–µ:</h4>
          <p className="text-sm">
            1. –ù–∞–π–¥–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–∏ f(x) = x¬≤ + 3x + 2 2. f'(x) = 2x + 3
            3. –ü—Ä–∏—Ä–∞–≤–Ω—è–µ–º –∫ –Ω—É–ª—é: 2x + 3 = 0 4. –†–µ—à–∏–º —É—Ä–∞–≤–Ω–µ–Ω–∏–µ: x = -3/2
          </p>
        </motion.div>
      </div>
    ),
  },
  {
    title: "–ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤ —á–∞—Ç–µ",
    description:
      "–ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –æ—Ç –Ω–∞—à–µ–≥–æ —É–º–Ω–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞",
    icon: MessageSquare,
    content: (
      <div className="space-y-4 w-full max-w-md bg-white p-6 rounded-lg shadow-xl">
        <motion.div
          className="bg-gray-100 p-3 rounded-lg"
          initial={{ x: -20, opacity: 0 }}
          animate={{ x: 0, opacity: 1 }}
          transition={{ duration: 0.8, ease: "easeOut" }}
        >
          –ö–∞–∫ —Ä–µ—à–∏—Ç—å –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ ax¬≤ + bx + c = 0?
        </motion.div>
        <motion.div
          className="bg-blue-600 p-3 rounded-lg ml-auto text-white"
          initial={{ x: 20, opacity: 0 }}
          animate={{ x: 0, opacity: 1 }}
          transition={{ delay: 0.5, duration: 0.8, ease: "easeOut" }}
        >
          –î–ª—è —Ä–µ—à–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º—É–ª—É: x = (-b ¬± ‚àö(b¬≤ - 4ac)) / (2a). –ì–¥–µ a,
          b, c - –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã —É—Ä–∞–≤–Ω–µ–Ω–∏—è.
        </motion.div>
      </div>
    ),
  },
  {
    title: "–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã",
    description:
      "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è",
    icon: Brain,
    content: (
      <div className="relative w-full max-w-md h-80 bg-white rounded-lg shadow-xl overflow-hidden p-4">
        <h4 className="text-lg font-bold mb-4">–¢–µ—Å—Ç –ø–æ –∞–ª–≥–µ–±—Ä–µ</h4>
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.2, duration: 0.8, ease: "easeOut" }}
          className="mb-4"
        >
          <p className="mb-2">–†–µ—à–∏—Ç–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ: 2x - 5 = 11</p>
          <div className="space-y-2">
            {["x = 8", "x = 7", "x = 6", "x = 9"].map((option, index) => (
              <motion.button
                key={index}
                className="w-full p-2 bg-gray-100 rounded hover:bg-blue-100 transition-colors"
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
              >
                {option}
              </motion.button>
            ))}
          </div>
        </motion.div>
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 1, duration: 0.8, ease: "easeOut" }}
          className="absolute bottom-4 left-4 right-4"
        >
          <Button className="w-full bg-blue-600 hover:bg-blue-700 text-white">
            –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
          </Button>
        </motion.div>
      </div>
    ),
  },
  {
    title: "–°–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏",
    description:
      "–£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ—Å—Ç—è–∑–∞–Ω–∏—è—Ö –∏ –ø–æ–≤—ã—à–∞–π—Ç–µ —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å",
    icon: Trophy,
    content: (
      <div className="relative w-full max-w-md h-80 bg-white rounded-lg shadow-xl overflow-hidden p-4">
        <h4 className="text-lg font-bold mb-4">–õ–∏–¥–µ—Ä–±–æ—Ä–¥</h4>
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.2, duration: 0.8, ease: "easeOut" }}
          className="mb-4"
        >
          <ol className="space-y-2">
            {[
              {
                name: "–ï—Ä–∞—Å—ã–ª –ë.",
                score: "250 üî•",
              },
              {
                name: "–ê–π–∂–∞—Å –°.",
                score: "245 üî•",
              },
              {
                name: "–ê–ª–∏–º–∂–∞–Ω –ñ.",
                score: "240 üî•",
              },
              {
                name: "–í—ã",
                score: "20 üî•",
              },
            ].map((player, index) => (
              <motion.li
                key={index}
                className="flex items-center p-2 bg-gray-100 rounded"
                initial={{ x: -20, opacity: 0 }}
                animate={{ x: 0, opacity: 1 }}
                transition={{
                  delay: index * 0.1,
                  duration: 0.5,
                  ease: "easeOut",
                }}
              >
                <span className="mr-2 font-bold">{index + 1}.</span>
                <span className="flex-grow">{player.name}</span>
                <span className="font-bold">{player.score}</span>
              </motion.li>
            ))}
          </ol>
        </motion.div>
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 1, duration: 0.8, ease: "easeOut" }}
          className="absolute bottom-4 left-4 right-4"
        >
          <Button className="w-full bg-blue-600 hover:bg-blue-700 text-white">
            –ù–∞—á–∞—Ç—å —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ
          </Button>
        </motion.div>
      </div>
    ),
  },
];

const FeatureShowcase = () => {
  const [currentFeature, setCurrentFeature] = useState(0);

  const nextFeature = () =>
    setCurrentFeature((prev) => (prev + 1) % features.length);
  const prevFeature = () =>
    setCurrentFeature((prev) => (prev - 1 + features.length) % features.length);

  useEffect(() => {
    const timer = setInterval(nextFeature, 5000);
    return () => clearInterval(timer);
  }, []);

  return (
    <div className="relative max-w-4xl mx-auto mt-12">
      <h2 className="text-3xl font-bold mb-8 text-center">
        –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ math12.studio
      </h2>
      <div className="mb-8">
        <AnimatePresence mode="wait">
          <motion.div
            key={currentFeature}
            initial={{ opacity: 0, y: 50 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: -50 }}
            transition={{ duration: 0.5 }}
            className="flex flex-col md:flex-row items-center justify-between"
          >
            <div className="md:w-1/2 mb-4 md:mb-0">
              <motion.div
                initial={{ x: -50 }}
                animate={{ x: 0 }}
                transition={{ delay: 0.2, duration: 0.5 }}
              >
                {React.createElement(features[currentFeature].icon, {
                  className: "text-blue-600 h-12 w-12",
                })}
              </motion.div>
              <h3 className="text-2xl font-bold mb-2">
                {features[currentFeature].title}
              </h3>
              <p className="text-gray-600">
                {features[currentFeature].description}
              </p>
            </div>
            <div className="md:w-1/2 flex justify-center">
              {features[currentFeature].content}
            </div>
          </motion.div>
        </AnimatePresence>
      </div>
      <div className="flex justify-center space-x-2">
        <Button
          variant="outline"
          size="icon"
          onClick={prevFeature}
          aria-label="–ü—Ä–µ–¥—ã–¥—É—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è"
        >
          <ChevronLeft className="h-4 w-4" />
        </Button>
        {features.map((_, index) => (
          <Button
            key={index}
            variant="outline"
            size="icon"
            onClick={() => setCurrentFeature(index)}
            aria-label={`–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ—É–Ω–∫—Ü–∏–∏ ${index + 1}`}
            className={index === currentFeature ? "bg-blue-600 text-white" : ""}
          >
            <span className="sr-only">–§—É–Ω–∫—Ü–∏—è {index + 1}</span>
            <div
              className={`w-2 h-2 rounded-full ${
                index === currentFeature ? "bg-white" : "bg-gray-400"
              }`}
            />
          </Button>
        ))}
        <Button
          variant="outline"
          size="icon"
          onClick={nextFeature}
          aria-label="–°–ª–µ–¥—É—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è"
        >
          <ChevronRight className="h-4 w-4" />
        </Button>
      </div>
    </div>
  );
};

const testimonials = [
  {
    name: "–ê–ª–∏—è –ö.",
    role: "–£—á–µ–Ω–∏—Ü–∞ 11 –∫–ª–∞—Å—Å–∞",
    content:
      "math12.studio –ø–æ–º–æ–≥–ª–æ –º–Ω–µ —É–ª—É—á—à–∏—Ç—å –º–æ–∏ –æ—Ü–µ–Ω–∫–∏ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ. –¢–µ–ø–µ—Ä—å —è —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –±–æ–ª–µ–µ —É–≤–µ—Ä–µ–Ω–Ω–æ –Ω–∞ —É—Ä–æ–∫–∞—Ö!",
  },
  {
    name: "–ú–µ—Ä–µ–π –õ.",
    role: "–†–æ–¥–∏—Ç–µ–ª—å",
    content:
      "–ú–æ–π —Å—ã–Ω —Å—Ç–∞–ª –ª—É—á—à–µ –ø–æ–Ω–∏–º–∞—Ç—å –º–∞—Ç–µ–º–∞—Ç–∏–∫—É –±–ª–∞–≥–æ–¥–∞—Ä—è math12.studio. –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–ª–∏—á–Ω—ã–π —Å–µ—Ä–≤–∏—Å!",
  },
  {
    name: "–ê–¥–∞–ª –õ.",
    role: "–£—á–µ–Ω–∏–∫",
    content:
      "–ß–µ—Å—Ç–Ω–æ –≤ —à–æ–∫–µ –æ—Ç —ç—Ç–∏—Ö –≤—Å–µ—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π, —Ç–µ–ø–µ—Ä—å –º–æ—è —Ç—Ä–æ–π–∫–∞ –ø—Ä–µ–≤—Ä–∞—Ç–∏–ª–∞—Å—å –≤ 5! –û—á–µ–Ω—å –¥–æ–≤–æ–ª–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏!",
  },
];

const TestimonialCard = ({ testimonial }) => (
  <motion.div
    className="bg-white p-6 rounded-lg shadow-lg"
    initial={{ opacity: 0, y: 50 }}
    animate={{ opacity: 1, y: 0 }}
    transition={{ duration: 0.5 }}
  >
    <div className="flex items-center mb-4">
      <div>
        <h4 className="font-bold">{testimonial.name}</h4>
        <p className="text-sm text-gray-600">{testimonial.role}</p>
      </div>
    </div>
    <p className="text-gray-700">{testimonial.content}</p>
  </motion.div>
);

const AIComparison = () => (
  <div className="grid md:grid-cols-2 gap-8">
    <motion.div
      className="bg-white p-6 rounded-lg shadow-lg"
      initial={{ opacity: 0, x: -50 }}
      animate={{ opacity: 1, x: 0 }}
      transition={{ duration: 0.5 }}
    >
      <h3 className="text-xl font-bold mb-4">math12.studio AI</h3>
      <ul className="space-y-2">
        <li className="flex items-center">
          <Zap className="text-green-500 mr-2" />
          –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞–Ω–∏—è
        </li>
        <li className="flex items-center">
          <Zap className="text-green-500 mr-2" />
          –ê–¥–∞–ø—Ç–∏–≤–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ
        </li>
        <li className="flex items-center">
          <Zap className="text-green-500 mr-2" />
          –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –∏ —Ç–µ—Å—Ç—ã
        </li>
        <li className="flex items-center">
          <Zap className="text-green-500 mr-2" />
          –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        </li>
      </ul>
    </motion.div>
    <motion.div
      className="bg-white p-6 rounded-lg shadow-lg"
      initial={{ opacity: 0, x: 50 }}
      animate={{ opacity: 1, x: 0 }}
      transition={{ duration: 0.5 }}
    >
      <h3 className="text-xl font-bold mb-4">–û–±—ã—á–Ω—ã–π ChatGPT</h3>
      <ul className="space-y-2">
        <li className="flex items-center">
          <Zap className="text-gray-400 mr-2" />
          –û–±—â–∏–µ –∑–Ω–∞–Ω–∏—è –±–µ–∑ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        </li>
        <li className="flex items-center">
          <Zap className="text-gray-400 mr-2" />
          –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è
        </li>
        <li className="flex items-center">
          <Zap className="text-gray-400 mr-2" />
          –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏
        </li>
        <li className="flex items-center">
          <Zap className="text-gray-400 mr-2" />
          –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
        </li>
      </ul>
    </motion.div>
  </div>
);

const ParallaxSection = ({ children }) => {
  const ref = useRef(null);
  const { scrollYProgress } = useScroll({
    target: ref,
    offset: ["start end", "end start"],
  });

  const y = useTransform(scrollYProgress, [0, 1], ["0%", "100%"]);

  return (
    <motion.div ref={ref} style={{ y }} className="relative z-10">
      {children}
    </motion.div>
  );
};

export default function EnhancedLandingPage() {
  return (
    <div className="min-h-screen text-gray-900">
      <section className="relative py-20 px-4 sm:px-6 lg:px-8 overflow-hidden">
        <div className="max-w-4xl mx-auto text-center">
          <motion.div
            initial={{ scale: 0 }}
            animate={{ scale: 1 }}
            transition={{ duration: 0.8, ease: "easeOut" }}
            className="mb-8"
          ></motion.div>
          <motion.h1
            initial={{ opacity: 0, y: -50 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, ease: "easeOut" }}
            className="text-5xl sm:text-6xl md:text-7xl font-bold mb-6"
          >
            <span className="text-blue-600">math</span>12.studio
          </motion.h1>
          <motion.p
            initial={{ opacity: 0, y: 50 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.2, ease: "easeOut" }}
            className="text-2xl mb-8 text-gray-600"
          >
            –†–µ–≤–æ–ª—é—Ü–∏—è –≤ –∏–∑—É—á–µ–Ω–∏–∏ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–∏–ª–ª–∞–±—É—Å–∞ –ù–ò–®
          </motion.p>
          <motion.div
            initial={{ opacity: 0, scale: 0.5 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.8, delay: 0.4, ease: "easeOut" }}
          >
            <Button
              asChild
              size="lg"
              className="bg-blue-600 text-white hover:bg-blue-700 transform hover:scale-105 transition-all duration-300 text-xl px-8 py-4"
            >
              <Link href="/register">
                –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ <ArrowRight className="ml-2 h-6 w-6" />
              </Link>
            </Button>
          </motion.div>
        </div>
      </section>

      <section className="py-20 px-4 sm:px-6 lg:px-8">
        <div className="max-w-6xl mx-auto">
          <FeatureShowcase />
        </div>
      </section>

      <section className="py-20 px-4 sm:px-6 lg:px-8 bg-gray-50">
        <div className="max-w-6xl mx-auto">
          <h2 className="text-4xl font-bold mb-16 text-center">
            –û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
          </h2>
          <div className="grid md:grid-cols-3 gap-8">
            {testimonials.map((testimonial, index) => (
              <TestimonialCard key={index} testimonial={testimonial} />
            ))}
          </div>
        </div>
      </section>

      <section className="py-20 px-4 sm:px-6 lg:px-8">
        <div className="max-w-6xl mx-auto">
          <h2 className="text-4xl font-bold mb-16 text-center">
            math12.studio AI vs –æ–±—ã—á–Ω—ã–π ChatGPT
          </h2>
          <AIComparison />
        </div>
      </section>

      <section className="py-20 px-4 sm:px-6 lg:px-8 bg-blue-600 text-white">
        <div className="max-w-4xl mx-auto text-center">
          <h2 className="text-4xl font-bold mb-6">
            –ì–æ—Ç–æ–≤—ã –∫ –Ω–æ–≤–æ–º—É —É—Ä–æ–≤–Ω—é –≤ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ?
          </h2>
          <p className="text-xl mb-8">
            –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ math12.studio –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è —Å–∏–ª—É –ò–ò –≤
            –æ–±—É—á–µ–Ω–∏–∏
          </p>
          <Button
            asChild
            size="lg"
            className="bg-white text-blue-600 hover:bg-gray-100 transform hover:scale-105 transition-all duration-300 text-xl px-8 py-4"
          >
            <Link href="/register">
              –ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ <ArrowRight className="ml-2 h-6 w-6" />
            </Link>
          </Button>
        </div>
      </section>
    </div>
  );
}
